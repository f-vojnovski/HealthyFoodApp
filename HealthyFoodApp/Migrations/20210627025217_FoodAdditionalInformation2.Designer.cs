// <auto-generated />
using System;
using HealthyFoodApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthyFoodApp.Migrations
{
    [DbContext(typeof(HealthyFoodAppDbContext))]
    [Migration("20210627025217_FoodAdditionalInformation2")]
    partial class FoodAdditionalInformation2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthyFoodApp.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Alcohol")
                        .HasColumnType("int");

                    b.Property<float?>("ButanoicAcid")
                        .HasColumnType("real");

                    b.Property<int?>("Caffeine")
                        .HasColumnType("int");

                    b.Property<int?>("Calcium")
                        .HasColumnType("int");

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<float?>("Carbohydrate")
                        .HasColumnType("real");

                    b.Property<int?>("CaroteneAlpha")
                        .HasColumnType("int");

                    b.Property<int?>("CaroteneBeta")
                        .HasColumnType("int");

                    b.Property<int?>("Cholesterol")
                        .HasColumnType("int");

                    b.Property<float?>("Choline")
                        .HasColumnType("real");

                    b.Property<float?>("Copper")
                        .HasColumnType("real");

                    b.Property<int?>("Cryptoxanthin")
                        .HasColumnType("int");

                    b.Property<float?>("DecanoicAcid")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("DocosahexaenoicN3Acid")
                        .HasColumnType("real");

                    b.Property<float?>("DocosapentaenoicN3acid")
                        .HasColumnType("real");

                    b.Property<float?>("DocosenoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("DodecanoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("EicosapentaenoicN3Acid")
                        .HasColumnType("real");

                    b.Property<float?>("EicosatetraenoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("EicosenoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("Fat")
                        .HasColumnType("real");

                    b.Property<float?>("Fiber")
                        .HasColumnType("real");

                    b.Property<int?>("FolateDFE")
                        .HasColumnType("int");

                    b.Property<int?>("FolateFood")
                        .HasColumnType("int");

                    b.Property<int?>("FolicAcid")
                        .HasColumnType("int");

                    b.Property<float?>("HexadecanoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("HexadecenoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("HexanoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("Iron")
                        .HasColumnType("real");

                    b.Property<int?>("LuteinZeaxanthin")
                        .HasColumnType("int");

                    b.Property<int?>("Lycopene")
                        .HasColumnType("int");

                    b.Property<float?>("Magnesium")
                        .HasColumnType("real");

                    b.Property<float?>("MonounsaturatedFattyAcids")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Niacin")
                        .HasColumnType("real");

                    b.Property<float?>("OctadecadienoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("OctadecanoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("OctadecatetraenoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("OctadecatrienoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("OctadecenoicAcid")
                        .HasColumnType("real");

                    b.Property<float?>("OctanoicAcid")
                        .HasColumnType("real");

                    b.Property<int?>("Phosphorus")
                        .HasColumnType("int");

                    b.Property<float?>("PolyunsaturatedFattyAcids")
                        .HasColumnType("real");

                    b.Property<int?>("Potassium")
                        .HasColumnType("int");

                    b.Property<float?>("Protein")
                        .HasColumnType("real");

                    b.Property<int?>("Retinol")
                        .HasColumnType("int");

                    b.Property<float?>("Riboflavin")
                        .HasColumnType("real");

                    b.Property<float?>("SaturatedFattyAcids")
                        .HasColumnType("real");

                    b.Property<int?>("Selenium")
                        .HasColumnType("int");

                    b.Property<int?>("Sodium")
                        .HasColumnType("int");

                    b.Property<float?>("Sugar")
                        .HasColumnType("real");

                    b.Property<float?>("TetradecanoicAcid")
                        .HasColumnType("real");

                    b.Property<int?>("Theobromine")
                        .HasColumnType("int");

                    b.Property<float?>("Thiamin")
                        .HasColumnType("real");

                    b.Property<float?>("TocopherolAlpha")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VitaminARae")
                        .HasColumnType("int");

                    b.Property<float?>("VitaminB12")
                        .HasColumnType("real");

                    b.Property<float?>("VitaminB12Added")
                        .HasColumnType("real");

                    b.Property<float?>("VitaminB6")
                        .HasColumnType("real");

                    b.Property<float?>("VitaminC")
                        .HasColumnType("real");

                    b.Property<float?>("VitaminD")
                        .HasColumnType("real");

                    b.Property<float?>("VitaminE")
                        .HasColumnType("real");

                    b.Property<float?>("VitaminEAdded")
                        .HasColumnType("real");

                    b.Property<float?>("VitaminK")
                        .HasColumnType("real");

                    b.Property<float?>("Water")
                        .HasColumnType("real");

                    b.Property<float?>("Zinc")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("HealthyFoodApp.Models.FoodAdditionalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InformationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.ToTable("FoodAdditionalInformation");
                });

            modelBuilder.Entity("HealthyFoodApp.Models.FoodAdditionalInformation", b =>
                {
                    b.HasOne("HealthyFoodApp.Models.Food", null)
                        .WithMany("AdditionalInformation")
                        .HasForeignKey("FoodId");
                });

            modelBuilder.Entity("HealthyFoodApp.Models.Food", b =>
                {
                    b.Navigation("AdditionalInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
